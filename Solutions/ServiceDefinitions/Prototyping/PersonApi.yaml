openapi: "3.0.0"
info:
  version: 1.0.0
  title: Marain Line of Business People API
  description: An API for storing information about people.
  license:
    name: MIT
servers:
  - url: /
paths:
  /{tenantId}/marain/people/:
    get:
      summary: Get a list of people, optionally expanding particular relationship types and embedding certain relationships.
      operationId: getPeople
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/rel'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/embed'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxEmbedded'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Person.yaml#/components/schemas/PersonListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    post:
      summary: Create a person
      operationId: createPerson
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        description: the details of the person to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
  /{tenantId}/marain/people/{personId}:
    get:
      summary: Get a person
      operationId: getPerson
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/rel'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/embed'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxEmbedded'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Person.yaml#/components/schemas/PersonResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/related/people:
    get:
      summary: Get people related to this person, optionally filtering to particular relationship types, and/or particular target person hrefs.
      operationId: getPersonToPersonRelationships
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/rel'
        - $ref: '#/components/parameters/href'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Person.yaml#/components/schemas/RelatedPeopleListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

    delete:
      summary: Delete a specific relationship between two people
      operationId: deletePersonToPersonRelationship
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/requiredRel'
        - $ref: '#/components/parameters/requiredHref'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

    post:
      summary: Add a relationship to another person
      operationId: addPersonToPersonRelationship
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/requiredRel'
        - $ref: '#/components/parameters/requiredHref'
      requestBody:
        description: Additional properties for the relationship
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              uniqueItems: true
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/telephoneNumbers:
    get:
      summary: Get a person's telephone numbers
      operationId: getPersonTelephoneNumbers
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Telephone.yaml#/components/schemas/TelephoneNumberListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    post:
      summary: Add a telephone number for the person
      operationId: addPersonTelephoneNumber
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
      requestBody:
        description: The telephone number to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTelephoneNumberRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/telephoneNumbers/{telephoneNumberId}:
    get:
      summary: Get a particular telephone number
      operationId: getPersonTelephoneNumber
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/telephoneNumberId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Telephone.yaml#/components/schemas/TelephoneNumberResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    put:
      summary: Replace a telephone number for the person
      operationId: replacePersonTelephoneNumber
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/telephoneNumberId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      requestBody:
        description: The telephone number with which to replace the given number
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceTelephoneNumberRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    delete:
      summary: Delete a telephone number for the person
      operationId: deletePersonTelephoneNumber
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/telephoneNumberId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/names:
    get:
      summary: Get a person's names
      operationId: getPersonNames
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/PersonName.yaml#/components/schemas/PersonNameListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    post:
      summary: Add a name for the person
      operationId: addPersonName
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
      requestBody:
        description: The name to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPersonNameRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/names/{personNameId}:
    get:
      summary: Get a particular name
      operationId: getPersonName
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/personNameId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/PersonName.yaml#/components/schemas/PersonNameResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    put:
      summary: Replace a name for the person
      operationId: replacePersonName
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/personNameId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      requestBody:
        description: The name with which to replace the given name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplacePersonNameRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    delete:
      summary: Delete a name for the person
      operationId: deletePersonName
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/personNameId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/addresses:
    get:
      summary: Get a person's addresses
      operationId: getPersonAddresses
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/AddressesAndLocations.yaml#/components/schemas/AddressListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    post:
      summary: Add an address for the person
      operationId: addPersonAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
      requestBody:
        description: The address to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/addresses/{addressId}:
    get:
      summary: Get a particular address
      operationId: getPersonAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/addressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/AddressesAndLocations.yaml#/components/schemas/AddressResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

    put:
      summary: Replace an address for the person
      operationId: replacePersonAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/addressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      requestBody:
        description: The address with which to replace the given address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceAddressRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    delete:
      summary: Delete an address for the person
      operationId: deletePersonAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/addressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/emailAddresses:
    get:
      summary: Get a person's email addresses
      operationId: getPersonEmailAddresses
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/continuationToken'
        - $ref: 'Common/ResourcesAndLinks.yaml#/components/parameters/maxItems'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Email.yaml#/components/schemas/EmailAddressListResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

    post:
      summary: Add an email address for the person
      operationId: addPersonEmailAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
      requestBody:
        description: The email address to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmailAddressRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

  /{tenantId}/marain/people/{personId}/contactDetails/emailAddresses/{emailAddressId}:
    get:
      summary: Get a particular email address
      operationId: getPersonEmailAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/emailAddressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifNoneMatch'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Common/Email.yaml#/components/schemas/EmailAddressResource'
          headers:
            ETag:
              $ref: 'Common/ConditionalHeaders.yaml#/components/schemas/ETag'
        304:
          description: Not modified
        400:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/BadRequest'
        403:
          description: Forbidden
        404:
          description: Not found
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    put:
      summary: Replace an email address for the person
      operationId: replacePersonEmailAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/emailAddressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      requestBody:
        description: The email address with which to replace the given email address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceEmailAddressRequest'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'
    delete:
      summary: Delete an email address for the person
      operationId: deletePersonEmailAddress
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/emailAddressId'
        - $ref: 'Common/ConditionalHeaders.yaml#/components/parameters/ifMatch'
      responses:
        202:
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: url
              description: the URL of the Marain.OperationsStatus API for this operation.
        400:
          description: Bad request
        403:
          description: Forbidden
        default:
            $ref: 'Common/ProblemDetailsAndErrors.yaml#/components/responses/UnexpectedError'

components:
  parameters:
    rel:
      name: rel
      in: query
      description: the optional relationship types for a relationship-related query
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          minLength: 1
          maxLength: 50

    href:
      name: href
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
        format: url
      description: The URL for the target organizational unit in the relationship

    requiredRel:
      name: rel
      in: query
      description: the type of the relationship
      required: true
      style: form
      explode: true
      schema:
        type: string
        minLength: 1
        maxLength: 50

    requiredHref:
      name: href
      in: query
      required: true
      schema:
        type: string
        format: url
      description: The URL for the target person in the relationship

    tenantId:
      name: tenantId
      in: path
      required: true
      description: the ID of the tenant making the request
      schema:
        type: string

    personId:
      name: personId
      in: path
      required: true
      description: the ID of the person related to the request
      schema:
        type: string

    addressId:
      name: addressId
      in: path
      required: true
      description: the ID of the address related to the request
      schema:
        type: string

    emailAddressId:
      name: emailAddressId
      in: path
      required: true
      description: the ID of the email address related to the request
      schema:
        type: string

    personNameId:
      name: personNameId
      in: path
      required: true
      description: the ID of the person name related to the request
      schema:
        type: string

    telephoneNumberId:
      name: telephoneNumberId
      in: path
      required: true
      description: the ID of the telephone number related to the request
      schema:
        type: string

  schemas:
    AddPersonNameRequest:
      description: A person name to add
      type: object
      properties:
        personName:
          $ref: 'Common/PersonName.yaml#/components/schemas/PersonName'

    ReplacePersonNameRequest:
      description: A person name to replace
      type: object
      properties:
        personName:
          $ref: 'Common/PersonName.yaml#/components/schemas/PersonName'

    AddEmailAddressRequest:
      description: An email address to add
      type: object
      properties:
        emailAddress:
          $ref: 'Common/Email.yaml#/components/schemas/EmailAddress'

    ReplaceEmailAddressRequest:
      description: An email address to replace
      type: object
      properties:
        emailAddress:
          $ref: 'Common/Email.yaml#/components/schemas/EmailAddress'

    AddTelephoneNumberRequest:
      description: A telephone number to add
      type: object
      properties:
        telephoneNumber:
          $ref: 'Common/Telephone.yaml#/components/schemas/TelephoneNumber'

    ReplaceTelephoneNumberRequest:
      description: A telephone number to replace
      type: object
      properties:
        telephoneNumber:
          $ref: 'Common/Telephone.yaml#/components/schemas/TelephoneNumber'

    AddAddressRequest:
      description: An address to add
      type: object
      properties:
        address:
          $ref: 'Common/AddressesAndLocations.yaml#/components/schemas/Address'

    ReplaceAddressRequest:
      description: An address to replace
      type: object
      properties:
        address:
          $ref: 'Common/AddressesAndLocations.yaml#/components/schemas/Address'

    CreatePersonRequest:
      type: object
      required:
      - primaryName
      properties:
        wellKnownId:
          type: string
          minLength: 1
          maxLength: 100
        primaryName:
          $ref: 'Common/PersonName.yaml#/components/schemas/PersonName'